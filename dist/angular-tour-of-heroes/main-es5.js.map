{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/messages.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/mock-heroes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","dataEncapsulation","declarations","providers","bootstrap","DashboardComponent","heroService","heroes","getHeroes","subscribe","slice","HeroDetailComponent","route","location","getHero","snapshot","paramMap","get","hero","back","HeroService","http","messageService","heroesUrl","add","find","message","providedIn","HeroesComponent","InMemoryDataService","name","length","Math","max","map","MessagesService","messages","push","messagesService","MessagesComponent","HEROES","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'detail/:id', component: HeroDetailComponent },\n  { path: 'heroes', component: HeroesComponent }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","<title>{{title}}</title>\n\n<h1>{{title}}</h1>\n<nav>\n    <a routerLink=\"/dashboard\">Dashboard</a>\n    <a routerLink=\"/heroes\">Heroes</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  public heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n  public getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n}\n","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n    <a *ngFor=\"let hero of heroes\" class=\"col-1-4\" routerLink=\"/detail/{{hero.id}}\">\n        <div class=\"module hero\">\n            <h4>{{hero.name}}</h4>\n        </div>\n    </a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { HeroService } from '../hero.service';\nimport { Hero } from '../hero';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.scss']\n})\nexport class HeroDetailComponent implements OnInit {\n  public hero: Hero;\n  constructor(  private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  public getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id)\n    .subscribe(hero => this.hero = hero);\n  }\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<div *ngIf=\"hero\">\n\n    <h2>{{hero.name | uppercase}} Details</h2>\n    <div><span>id: </span>{{hero.id}}</div>\n    <div>\n        <label>name:\n        <input [(ngModel)]=\"hero.name\" placeholder=\"name\"/>\n      </label>\n    </div>\n    <button (click)=\"goBack()\">go back</button>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessagesService } from './messages.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  private heroesUrl = 'api/heroes'; \n\n  constructor(private http: HttpClient, private messageService: MessagesService) { }\n\n  public getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n  }\n  public getHero(id: number): Observable<Hero> {\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(HEROES.find(hero => hero.id === id));\n  }\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from \"../hero\";\nimport { HeroService } from '../hero.service';\nimport { MessagesService } from '../messages.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.scss']\n})\nexport class HeroesComponent  implements OnInit {\n\n  constructor(private heroService: HeroService, private messageService: MessagesService) { }\n\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n\n  public heroes: Hero[];\n\n  public getHeroes(): void {\n    this.heroService.getHeroes()\n        .subscribe(heroes => this.heroes = heroes);\n  }\n}\n","<h2>My Heroes</h2>\n<ul class=\"heroes\">\n    <li *ngFor=\"let hero of heroes\" [class.selected]=\"hero === selectedHero\">\n        <a routerLink=\"/detail/{{hero.id}}\">\n            <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n        </a>\n    </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Hero } from './hero';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemoryDataService implements InMemoryDbService {\n\n  createDb() {\n    const heroes = [\n      { id: 11, name: 'Dr Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return {heroes};\n  }\n\n  genId(heroes: Hero[]): number {\n    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n\n  public messages: string[] = [];\n\n  public add(message: string) {\n    this.messages.push(message);\n  }\n\n  public clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessagesService } from '../messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messagesService.messages.length\">\n\n    <h2>Messages</h2>\n    <button class=\"clear\" (click)=\"messagesService.clear()\">clear</button>\n    <div *ngFor='let message of messagesService.messages'> {{message}} </div>\n  \n  </div>\n","import { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Dr Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}